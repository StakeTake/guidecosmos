#!/bin/bash

while true
do

# Logo

echo "========================================================================================================================"
curl -s https://raw.githubusercontent.com/StakeTake/script/main/logo.sh | bash
echo "========================================================================================================================"

# Menu

PS3='Select an action: '
options=(
"Install Node"
"Check Log"
"Check balance"
"Request tokens in discord"
"Create Validator"
"Exit")
select opt in "${options[@]}"
do
case $opt in

"Install Node")
echo "============================================================"
echo "Install start"
echo "============================================================"
echo "Setup NodeName:"
echo "============================================================"
read NODENAME
echo "============================================================"
echo "Setup WalletName:"
echo "============================================================"
read WALLETNAME
echo export NODENAME=${NODENAME} >> $HOME/.bash_profile
echo export WALLETNAME=${WALLETNAME} >> $HOME/.bash_profile
echo export CHAIN_ID=korellia >> $HOME/.bash_profile
source ~/.bash_profile

#UPDATE APT
sudo apt update
sudo apt install zip -y

#INSTALL GO
wget https://golang.org/dl/go1.18.3.linux-amd64.tar.gz; \
rm -rv /usr/local/go; \
tar -C /usr/local -xzf go1.18.3.linux-amd64.tar.gz && \
rm -v go1.18.3.linux-amd64.tar.gz && \
echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> ~/.bash_profile && \
source ~/.bash_profile && \
go version

#INSTALL
cd $HOME
wget https://github.com/KYVENetwork/chain/releases/download/v0.6.4/chain_linux_amd64.tar.gz
tar -xvzf chain_linux_amd64.tar.gz
cp chaind /usr/bin
chaind unsafe-reset-all
rm /root/.kyve/config/genesis.json
chaind init $NODENAME --chain-id korellia
rm /root/.kyve/config/genesis.json
pruning="custom"
pruning_keep_recent="100"
pruning_keep_every="0"
pruning_interval="10"
sed -i -e "s/^pruning *=.*/pruning = \"$pruning\"/" $HOME/.kyve/config/app.toml
sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \"$pruning_keep_recent\"/" $HOME/.kyve/config/app.toml
sed -i -e "s/^pruning-keep-every *=.*/pruning-keep-every = \"$pruning_keep_every\"/" $HOME/.kyve/config/app.toml
sed -i -e "s/^pruning-interval *=.*/pruning-interval = \"$pruning_interval\"/" $HOME/.kyve/config/app.toml
external_address=$(wget -qO- eth0.me)
peers="a3fd6919ec3c5eb0fcd26dd9758ad8183bb7a93d@51.15.104.178:26656,52880e07804a612a3611025b4283e845084c2b26@38.242.241.164:26256,6215a7936b5410dd4b8ec1d25d80b80aaee275bc@45.10.43.108:26656,e56574f922ff41c68b80700266dfc9e01ecae383@18.156.198.41:26656,022399338c77a6be4bf26d6b0735030c6c95732f@194.163.189.114:56656,f85664da0bb5787b6d7e93c4d4cbb344374f1fce@178.20.43.103:26656,52be70508d5bceb14dd8745471f437182201e59b@135.181.6.243:26632,6fac99ff534a905f3339b400547d2c731ad3d6f7@45.10.42.125:26656,eb2172370e3e1f77fadef9018e1c503e12839b7e@62.113.119.150:26656,522bf8fe88ee84316a06c9f94a195fa0096ff2ad@77.83.92.238:26656,8813c8167b8f5a91e10bee676e9738c7d928ad7a@139.59.100.3:26656,e1a13fab199f489b41c0a0f705bf06cf46dc4d3f@165.227.202.155:26656"
sed -i.bak -e "s/^external_address *=.*/external_address = \"$external_address:26656\"/; s/^persistent_peers *=.*/persistent_peers = \"$peers\"/" $HOME/.kyve/config/config.toml
wget -O $HOME/.kyve/config/genesis.json "https://github.com/KYVENetwork/chain/releases/download/v0.0.1/genesis.json"
wget -O $HOME/.kyve/config/addrbook.json "https://raw.githubusercontent.com/StakeTake/guidecosmos/main/KYVE/korellia/addrbook.json"
go install github.com/cosmos/cosmos-sdk/cosmovisor/cmd/cosmovisor@v1.0.0
mkdir -p $HOME/.kyve/cosmovisor/genesis/bin
mkdir $HOME/.kyve/cosmovisor/upgrades
cp $(which chaind) $HOME/.kyve/cosmovisor/genesis/bin/


echo "============================================================"
echo "Be sure to write down the mnemonic!"
echo "============================================================"
#WALLET
chaind keys add $WALLETNAME

sudo tee /etc/systemd/system/kyved.service > /dev/null <<EOF  
[Unit]
Description=cosmovisor
After=network-online.target
[Service]
User=$USER
ExecStart=$(which cosmovisor) start
Restart=on-failure
RestartSec=12
LimitNOFILE=65535
Environment="DAEMON_HOME=$HOME/.kyve"
Environment="DAEMON_NAME=chaind"
Environment="DAEMON_ALLOW_DOWNLOAD_BINARIES=true"
Environment="DAEMON_RESTART_AFTER_UPGRADE=true"
Environment="UNSAFE_SKIP_BACKUP=true"
[Install]
WantedBy=multi-user.target
EOF

cd
rm -rf ~/.kyve/data; \
wget -O - http://snap.stake-take.com:8000/kyve.tar.gz | tar xf -
mv $HOME/root/.kyve/data $HOME/.kyve
rm -rf $HOME/root

cat /etc/systemd/system/kyved.service
sudo systemctl enable kyved
sudo systemctl daemon-reload
sudo systemctl restart kyved

sed -i 's/#Storage=auto/Storage=persistent/g' /etc/systemd/journald.conf
sudo systemctl restart systemd-journald

break
;;

"Check Log")

journalctl -u kyved -f -o cat

break
;;


"Check balance")
chaind q bank balances $(chaind keys show $WALLETNAME -a --bech acc)
break
;;

"Create Validator")
chaind tx staking create-validator --yes \
 --amount 1000000tkyve \
 --moniker $NODENAME \
 --commission-rate "0.05" \
 --commission-max-rate "0.20" \
 --commission-max-change-rate "0.05" \
 --min-self-delegation "1" \
 --pubkey "$(chaind tendermint show-validator)" \
 --from $WALLETNAME \
 --chain-id $CHAIN_ID
break
;;

"Request tokens in discord")
echo "========================================================================================================================"
echo "In order to receive tokens, you need to go to the Discord server
and request tokens in the faucet channel in the format !faucet send <your_kyve_address>"
echo "========================================================================================================================"

break
;;

"Exit")
exit
;;
*) echo "invalid option $REPLY";;
esac
done
done
